
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftXORleftORleftANDrightNOTAND ATOM FACTS IMP IOI LPAREN NOT OR QUERIES RPAREN XORexpression   : ATOM ATOMexpression   : NOT expression\n                        | NOT LPAREN expression RPARENexpression   : expression IMP expression\n                        | expression IOI expressionexpression   : expression AND expression\n                        | expression OR expression\n                        | expression XOR expressionexpression   : LPAREN expression RPARENexpression   : QUERIESexpression   : FACTSexpression   : ATOM'
    
_lr_action_items = {'ATOM':([0,2,3,4,7,8,9,10,11,14,],[2,12,2,2,2,2,2,2,2,2,]),'NOT':([0,3,4,7,8,9,10,11,14,],[3,3,3,3,3,3,3,3,3,]),'LPAREN':([0,3,4,7,8,9,10,11,14,],[4,14,4,4,4,4,4,4,4,]),'QUERIES':([0,3,4,7,8,9,10,11,14,],[5,5,5,5,5,5,5,5,5,]),'FACTS':([0,3,4,7,8,9,10,11,14,],[6,6,6,6,6,6,6,6,6,]),'$end':([1,2,5,6,12,13,16,17,18,19,20,22,23,],[0,-12,-10,-11,-1,-2,-4,-5,-6,-7,-8,-9,-3,]),'IMP':([1,2,5,6,12,13,15,16,17,18,19,20,21,22,23,],[7,-12,-10,-11,-1,-2,7,7,7,-6,-7,-8,7,-9,-3,]),'IOI':([1,2,5,6,12,13,15,16,17,18,19,20,21,22,23,],[8,-12,-10,-11,-1,-2,8,8,8,-6,-7,-8,8,-9,-3,]),'AND':([1,2,5,6,12,13,15,16,17,18,19,20,21,22,23,],[9,-12,-10,-11,-1,-2,9,9,9,-6,9,9,9,-9,-3,]),'OR':([1,2,5,6,12,13,15,16,17,18,19,20,21,22,23,],[10,-12,-10,-11,-1,-2,10,10,10,-6,-7,10,10,-9,-3,]),'XOR':([1,2,5,6,12,13,15,16,17,18,19,20,21,22,23,],[11,-12,-10,-11,-1,-2,11,11,11,-6,-7,-8,11,-9,-3,]),'RPAREN':([2,5,6,12,13,15,16,17,18,19,20,21,22,23,],[-12,-10,-11,-1,-2,22,-4,-5,-6,-7,-8,23,-9,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,3,4,7,8,9,10,11,14,],[1,13,15,16,17,18,19,20,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> ATOM ATOM','expression',2,'p_syntaxError','Parser.py',73),
  ('expression -> NOT expression','expression',2,'p_not','Parser.py',79),
  ('expression -> NOT LPAREN expression RPAREN','expression',4,'p_not','Parser.py',80),
  ('expression -> expression IMP expression','expression',3,'p_rule','Parser.py',88),
  ('expression -> expression IOI expression','expression',3,'p_rule','Parser.py',89),
  ('expression -> expression AND expression','expression',3,'p_operation','Parser.py',93),
  ('expression -> expression OR expression','expression',3,'p_operation','Parser.py',94),
  ('expression -> expression XOR expression','expression',3,'p_operation','Parser.py',95),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_parenthesis','Parser.py',99),
  ('expression -> QUERIES','expression',1,'p_queries','Parser.py',103),
  ('expression -> FACTS','expression',1,'p_facts','Parser.py',107),
  ('expression -> ATOM','expression',1,'p_atom','Parser.py',111),
]
